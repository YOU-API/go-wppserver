openapi: 3.0.0
info:
  title: go-wppserver
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
security:
  - oauth2_password:
      []
components:
  securitySchemes:
    oauth2_password:
      type: oauth2
      flows:
        password:
          tokenUrl: https://exemplo.com/oauth2/token
          scopes: {}
paths:
  /auth:
    post:
      tags:
        - Auth
      summary: Get Token
      parameters:
        - name: username
          in: query
          schema:
            type: string
          example: >-
            admin
        - name: password
          in: query
          schema:
            type: string
          example: >-
            root
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  type: string
                  example: '{{root_username}}'
                password:
                  type: string
                  example: '{{root_password}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/refresh:
    get:
      tags:
        - Auth
      summary: Refresh Token
      security: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijg4MDUwNDgyLTY0NzQtMTFlZC04NWE1LTUwYjdjMzAwODQzMyIsImV4cCI6MTY3MzIxMDM5NH0.6IBvKWQttUXegRFtVhjpV33FgqoJT7AMyc-nCwmrWT8
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user:
    post:
      tags:
        - User
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: '{{$randomUserName}}'
                Email: '{{$randomEmail}}'
                Password: '{{$randomEmail}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - User
      summary: Get User
      parameters:
        - name: id
          description: >-
            ID do Usuário (Opcional, Apenas para Administradores): Este campo permite que administradores especifiquem o ID de um usuário ao realizar uma operação em seu nome. Caso este campo seja fornecido, o sistema irá executar a operação usando as permissões do usuário com o ID fornecido. Caso este campo não seja fornecido ou seja deixado em branco, o ID do usuário será obtido a partir do token de acesso. Seu valor será ignorado caso o usuário não tenha permissão de administrador.
          in: query
          schema:
            type: string
          example: >-
            1d227184-1ec2-4fda-8ddb-d8159688fb49
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User
      summary: Update User
      parameters:
        - name: id
          description: >-
            ID do Usuário (Opcional, Apenas para Administradores): Este campo permite que administradores especifiquem o ID de um usuário ao realizar uma operação em seu nome. Caso este campo seja fornecido, o sistema irá executar a operação usando as permissões do usuário com o ID fornecido. Caso este campo não seja fornecido ou seja deixado em branco, o ID do usuário será obtido a partir do token de acesso. Seu valor será ignorado caso o usuário não tenha permissão de administrador.
          in: query
          schema:
            type: string
          example: >-
            1d227184-1ec2-4fda-8ddb-d8159688fb49
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '{{root_id}}'
                Name: root
                Email: root@example.com
                Status: enabled
                Type: admin
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User
      summary: Delete User
      parameters:
        - name: id
          description: >-
            ID do Usuário (Opcional, Apenas para Administradores): Este campo permite que administradores especifiquem o ID de um usuário ao realizar uma operação em seu nome. Caso este campo seja fornecido, o sistema irá executar a operação usando as permissões do usuário com o ID fornecido. Caso este campo não seja fornecido ou seja deixado em branco, o ID do usuário será obtido a partir do token de acesso. Seu valor será ignorado caso o usuário não tenha permissão de administrador.
          in: query
          schema:
            type: string
          example: >-
            1d227184-1ec2-4fda-8ddb-d8159688fb49
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/password:
    put:
      tags:
        - User
      summary: Update Password User
      parameters:
        - name: id
          description: >-
            ID do Usuário (Opcional, Apenas para Administradores): Este campo permite que administradores especifiquem o ID de um usuário ao realizar uma operação em seu nome. Caso este campo seja fornecido, o sistema irá executar a operação usando as permissões do usuário com o ID fornecido. Caso este campo não seja fornecido ou seja deixado em branco, o ID do usuário será obtido a partir do token de acesso. Seu valor será ignorado caso o usuário não tenha permissão de administrador.
          in: query
          schema:
            type: string
          example: >-
            1d227184-1ec2-4fda-8ddb-d8159688fb49
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '{{root_id}}'
                OldPassword: '{{root_password}}'
                NewPassword: '123'
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/status:
    put:
      tags:
        - User
      summary: Update Status User
      parameters:
        - name: id
          description: >-
            ID do Usuário (Opcional, Apenas para Administradores): Este campo permite que administradores especifiquem o ID de um usuário ao realizar uma operação em seu nome. Caso este campo seja fornecido, o sistema irá executar a operação usando as permissões do usuário com o ID fornecido. Caso este campo não seja fornecido ou seja deixado em branco, o ID do usuário será obtido a partir do token de acesso. Seu valor será ignorado caso o usuário não tenha permissão de administrador.
          in: query
          schema:
            type: string
          example: >-
            1d227184-1ec2-4fda-8ddb-d8159688fb49
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '{{root_id}}'
                Status: disabled
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users:
    get:
      tags:
        - User
      summary: Get Users
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/findusers:
    get:
      tags:
        - User
      summary: Find Users
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/key:
    post:
      tags:
        - API Key
      summary: Create User Key
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                UserId: '{{root_id}}'
                Description: V api key
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - API Key
      summary: Get User Keys
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - API Key
      summary: Delete User Key
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /device/login:
    get:
      tags:
        - Device
      summary: Login Device
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /device/logout:
    get:
      tags:
        - Device
      summary: Logout Device
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /session/status:
    get:
      tags:
        - Session
      summary: Status Session
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /session/connect:
    post:
      tags:
        - Session
      summary: Connect Session
      requestBody:
        content: {}
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /session/disconnect:
    post:
      tags:
        - Session
      summary: Disconnect Session
      requestBody:
        content: {}
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chat/send/text:
    post:
      tags:
        - Send
      summary: Send Image
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Phone: '+5511932486442'
                Body: '{{$randomLoremText}}'
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chat/send/document:
    post:
      tags:
        - Send
      summary: Send Document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Phone: '+5511932486442'
                FileName: My file.zip
                Document: >-
                  data:application/zip;base64,UEsDBBQAAAAIAEcLMladeZbNGgAAABgAAAAIAAAAZG93bmxvYWTLyM9JVCgsTeUqSczhSs7PzedKLS5JLOYCAFBLAQIfABQAAAAIAEcLMladeZbNGgAAABgAAAAIACQAAAAAAAAAIAAAAAAAAABkb3dubG9hZAoAIAAAAAAAAQAYAOkgZwD1KtkB6SBnAPUq2QGL/Iv/9CrZAVBLBQYAAAAAAQABAFoAAABAAAAAAAA=
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /phone/contacts:
    get:
      tags:
        - Phone
      summary: Get Contacts
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /phone/scraping:
    post:
      tags:
        - Phone
      summary: Scraping Phones
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Phone:
                  - '5491155553934'
                  - '5491155553935'
      security:
        - oauth2_password: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
